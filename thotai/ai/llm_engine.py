# Import necessary libraries
import os
import json
from datetime import date
from groq import Groq
from dotenv import load_dotenv

load_dotenv()  # Load environment variables from a .env file

# Initialize Groq client
client = Groq(api_key=os.getenv("GROQ_API_KEY"))

def generate_cultural_pack(theme: str = "D√©couverte g√©n√©rale"):
    """
    G√©n√®re un pack culturel via le mod√®le LLaMA3-70B de Groq.
    """
    prompt = f"""
    Tu es ThotAI, une IA de culture g√©n√©rale √©rudite et concise.
    Cr√©e un "pack culturel du jour" au format JSON.
    R√©ponds UNIQUEMENT avec un objet JSON valide, sans texte avant ni apr√®s.

    Le pack doit contenir :
    - date (au format AAAA-MM-JJ)
    - theme
    - facts : une liste de 3 faits culturels int√©ressants et pr√©cis
    - anecdote : une anecdote courte, v√©ridique et marquante
    - quiz : une question de culture avec 3 options et la bonne r√©ponse

    Th√®me : {theme}

    Format JSON attendu :
    {{
        "date": "{date.today()}",
        "theme": "{theme}",
        "facts": ["...", "...", "..."],
        "anecdote": "...",
        "quiz": {{
            "question": "...",
            "options": ["...", "...", "..."],
            "answer": "..."
        }}
    }}
    """

    # ‚úÖ Ici on envoie le vrai prompt
    response = client.chat.completions.create(
        model="llama-3.3-70b-versatile",
        messages=[
            {"role": "system", "content": "Tu es ThotAI, une IA √©rudite et concise."},
            {"role": "user", "content": prompt}
        ]
    )

    content = response.choices[0].message.content.strip()
    # print("üß† R√©ponse brute du mod√®le :", content)

    # ‚úÖ V√©rification JSON
    try:
        data = json.loads(content)
    except json.JSONDecodeError:
        data = {
            "date": str(date.today()),
            "theme": theme,
            "facts": ["Erreur : la sortie n‚Äô√©tait pas du JSON valide."],
            "anecdote": "Erreur de g√©n√©ration.",
            "quiz": {
                "question": "Erreur",
                "options": ["", "", ""],
                "answer": ""
            }
        }

    return data
